/** Contains definitions used by various other scripts.
*/

enum HS_Gamemode
{
	Invasion, // Portal
	HighValueTarget, // Roaming boss
	Domination // Capture zones
}

enum GameState
{
	Pregame,
	Inprogress,
	Interround
}

String GAMEMODE_STRING: ["Invasion", "High Value Target", "Domination"][gGamemode];

Boolean IS_DUMMY: IsDummyBot(EventPlayer());

// For element optimisation
// Doesn't work in workshop settings
// Provides no benefit in vectors
Number ZERO: false;
Number ONE: true;

globalvar Number gIter;
globalvar HS_Gamemode | HS_Gamemode[] gGamemode;
globalvar GameState gGameState = GameState.Pregame;

void RecoveryTeleport(Player _player = EventPlayer(), Vector _position = null) "[SHARED COROUTINE] Recovery Teleport"
{
	if (_position == null)
	{
		Teleport(_player, NearestWalkablePosition(EventPlayer()));
	}
	else
	{
		Teleport(_player, _position);
	}
}

Vector positionUnderPlayer(in Player _player)
{
	return RayCastHitPosition(
		_player.EyePosition(),
		_player.Position() + Vector(0, -1000, 0),
		null,
		null,
		false
	);
}
