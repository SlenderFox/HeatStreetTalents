import "globalvars.ostw";
import "subroutines.ostw";

rule: "HVT Team 2 Slot 1: Create HVT Entities"
Event.OngoingPlayer
Team.Team2
Player.Slot1
{
	CreateProgressBarHudText(gObjectivePhaseNumber == 1 || gObjectivePhaseNumber == 2 ? AllPlayers() : [], gObjectivePhaseNumber == 1 ? 100 * NormalizedHealth(EventPlayer()) : (pDownedStartT ? gObjectiveProgress : pReviveTimer) / 1.5, gObjectivePhaseNumber == 1 ? "Subdue the High Value Target" : pDownedStartT ? ArrayContains(pRevivers, LocalPlayer()) ? "Capturing..." : "Capture the High Value Target" : "High Value Target is being revived", Location.Top, -97, gObjectivePhaseNumber == 1 ? CustomColor(Max(200, 255 - (TotalTimeElapsed() - gHvtCallReinforcementsEndT) * 165), Max(0, 255 - (TotalTimeElapsed() - gHvtCallReinforcementsEndT) * 765), Max(19, 255 - (TotalTimeElapsed() - gHvtCallReinforcementsEndT) * 708), 255) : pDownedStartT ? pDownedStartT == 2 ? Color.Green : Color.Blue : Color.Red, gObjectivePhaseNumber == 1 ? Color.Blue : pDownedStartT ? Color.Blue : Color.Yellow, ProgressBarHudEvaluation.VisibleToValuesAndColor, Spectators.DefaultVisibility);
	CreateIcon(gObjectivePhaseNumber == 1 || gObjectivePhaseNumber == 2 ? AllPlayers() : [], EventPlayer(), Icon.ExclamationMark, IconRev.VisibleTo, Color.Yellow, true);
	CreateInWorldText(gObjectivePhaseNumber == 1 || gObjectivePhaseNumber == 2 ? AllPlayers() : [], gHvtCallReinforcementsEndT >= TotalTimeElapsed() ? "Calling Reinforcements" : gObjectivePhaseNumber == 1 ? "Subdue Target" : "Capture Target", EventPlayer(), 1.5, Clipping.DoNotClip, InworldTextRev.VisibleToAndString, Color.Yellow, Spectators.DefaultVisibility);
	CreateEffect(gObjectivePhaseNumber == 2 ? AllPlayers() : [], Effect.Ring, pDownedStartT ? pDownedStartT == 2 ? Color.Green : Color.White : Color.Red, EventPlayer().Position() + 0.65 * Up(), 10, EffectRev.VisibleToPositionRadiusAndColor);
	CreateEffect(gObjectivePhaseNumber == 2 ? AllPlayers() : [], Effect.Ring, pDownedStartT ? pDownedStartT == 2 ? Color.Green : Color.White : Color.Red, EventPlayer().Position() + 0.65 * Down(), 10, EffectRev.VisibleToPositionRadiusAndColor);
	CreateEffect(gObjectivePhaseNumber == 2 ? AllPlayers() : [], Effect.Ring, pDownedStartT ? pDownedStartT == 2 ? Color.Green : Color.White : Color.Red, EventPlayer().Position(), (TotalTimeElapsed() % 1.333 < 0.666) * 15 * TotalTimeElapsed() % 10, EffectRev.VisibleToPositionRadiusAndColor);
	CreateEffect(gHvtCallReinforcementsEndT >= TotalTimeElapsed() ? AllPlayers() : [], Effect.LightShaft, Color.White, UpdateEveryFrame(EventPlayer().Position()), 1, EffectRev.VisibleToPositionAndRadius);
}

rule: "HVT Team 2 Slot 1: HVT subdued fallback"
Event.OngoingPlayer
Team.Team2
Player.Slot1
if (gObjectivePhaseNumber == 2)
if (!HasStatus(EventPlayer(), Status.Stunned))
{
	Wait(0.25, WaitBehavior.AbortWhenFalse);
	AbortIfConditionIsFalse();
	while (gObjectivePhaseNumber == 2 && !HasStatus(EventPlayer(), Status.Stunned))
	{
		ClearStatus(EventPlayer(), Status.PhasedOut);
		CancelPrimaryAction(EventPlayer());
		SetStatus(EventPlayer(), null, Status.KnockedDown, 9999);
		Wait(0.25, WaitBehavior.IgnoreCondition);
	}
	if (gObjectivePhaseNumber == 2)
	{
		SetStatus(EventPlayer(), null, Status.PhasedOut, 9999);
	}
	LoopIfConditionIsTrue();
}

rule: "HVT Team 2 Slot 1: Subdued, check Player in Radius"
Event.OngoingPlayer
Team.Team2
Player.Slot1
if (gObjectivePhaseNumber == 2)
{
	pRevivers = gCombatants.Filter(
		p => !p.pDownedStartT
		&& !(p.pIsInvisible % 3)
		&& DistanceBetween(EventPlayer(), Vector(PositionOf(p).X, EventPlayer().Position().Y, PositionOf(p).Z)) <= 10
		&& AbsoluteValue(EventPlayer().Position().Y - PositionOf(p).Y) <= 5
		&& IsInLineOfSight(EventPlayer(), p, BarrierLOS.NoBarriersBlock)
	);
	if (CountOf(pRevivers))
	{
		pDownedStartT = 2;
		gObjectiveProgress += 1.5;
	}
	else if (gHvtDomObjectiveKilledCount >= 3)
	{
		pDownedStartT = 1;
		gObjectiveProgress += 0.6;
	}
	else if (pDownedStartT > 0)
	{
		pDownedStartT -= 0.2;
	}
	else
	{
		pReviveTimer += gHvtDomObjectiveKilledCount == 1 ? 3 : 2;
	}
	if (gObjectiveProgress >= 150)
	{
		ClearStatus(EventPlayer(), Status.KnockedDown);
		ClearStatus(EventPlayer(), Status.PhasedOut);
		ClearStatus(EventPlayer(), Status.Invincible);
		PlayEffect(AllPlayers(), PlayEffect.GoodPickupEffect, Color.Yellow, EventPlayer().Position(), 1);
		PlayEffect(AllPlayers(), PlayEffect.ExplosionSound, Color.White, EventPlayer().Position(), 200);
		Teleport(EventPlayer(), 1000 * Down());
		start_kill_remaining_phase();
		gObjectiveProgress = false;
	}
	else if (pReviveTimer >= 150)
	{
		gObjectivePhaseNumber = 1;
		gObjectiveProgress = false;
		pGmutFortifiedBypassEndT = false;
		BigMessage(AllPlayers(), "The HVT has been revived!");
		SetPlayerHealth(EventPlayer(), 0.6 * MaxHealth(EventPlayer()));
		ClearStatus(EventPlayer(), Status.KnockedDown);
		ClearStatus(EventPlayer(), Status.PhasedOut);
		ClearStatus(EventPlayer(), Status.Invincible);
	}
	Wait(0.2, WaitBehavior.IgnoreCondition);
	LoopIfConditionIsTrue();
}

rule: "HVT Team 2 Slot 1: Call Reinforcements"
Event.OngoingPlayer
Team.Team2
Player.Slot1
if (gObjectivePhaseNumber == 1)
if (NormalizedHealth(EventPlayer()) > 0.5)
{
	WaitUntil(NormalizedHealth(EventPlayer()) <= 0.5 || gObjectivePhaseNumber == 2, 99999);
	if (gObjectivePhaseNumber == 2)
	{
		gEnableNormalSpawns = true;
		call_reinforcements();
		async! play_incoming_sound_twice();
	}
	else
	{
		PlayEffect(AllPlayers(), PlayEffect.GoodPickupEffect, Color.Red, EventPlayer(), 1);
		gHvtCallReinforcementsEndT = TotalTimeElapsed() + 10;
		SetDamageReceived(EventPlayer(), 5);
		SetPlayerHealth(EventPlayer(), 0.5 * MaxHealth(EventPlayer()));
		Wait(1, WaitBehavior.IgnoreCondition);
		gEnableNormalSpawns = true;
		call_reinforcements();
		async! play_incoming_sound_twice();
		Wait(4, WaitBehavior.IgnoreCondition);
		SetDamageReceived(EventPlayer(), 50);
	}
	WaitUntil(gObjectivePhaseNumber == 3, 99999);
}

rule: "HVT Team 2 Slot 1: Capture Breakpoints"
Event.OngoingPlayer
Team.Team2
Player.Slot1
if (gObjectivePhaseNumber == 2)
{
	upgrade_health_and_healing();
	gMoneyAmount += 105;
	WaitUntil(gObjectiveProgress >= 140, 99999);
	gEnableNormalSpawns = true;
	call_reinforcements();
	async! play_incoming_sound_twice();
	WaitUntil(gObjectivePhaseNumber == 3, 99999);
	gMoneyAmount += 105;
}
