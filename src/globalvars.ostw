# main(1)
globalvar define Special_Thanks;
# bots(7) invasion(1) main(18) pathing(1) subroutines(5)
globalvar Any gamemode; // Both number and array
# main(4) team1(2)
globalvar Boolean is_hard_mode_enabled;
# bots(46) main(20) subroutines(7) team1(1)
globalvar Number wave_number;
# bots(2) domination(2) highvaluetarget(3) invasion(1) main(6) subroutines(2)
globalvar Boolean enable_normal_spawns;
# bots(5) invasion(4) subroutines(4)
globalvar Number special_spawns_count;
# bots(4)
globalvar Number tier_4_spawns_block_end_t;
# main(2)
globalvar Number last_spawn_phase_end_t;
# subroutines(2) team1(3)
globalvar Number upgrade_count;
# bots(3) main(2)
globalvar Hero[] boss_list_1;
# bots(1) main(1)
globalvar Hero[] boss_list_2;
# bots(11) domination(11) highvaluetarget(25) invasion(22) main(11) subroutines(5) team1(1)
globalvar Number objective_phase_number; // Could be an enum
# domination(20) highvaluetarget(7) invasion(4) main(2)
globalvar Any objective_progress; // Both number and 2d array of numbers
# bots(4) invasion(1) main(4)
globalvar Number enable_objective_enemy_spawn; // 0-2
# domnination(18) invasion(13) main(3) subroutines(6)
globalvar Vector iv_dom_objective_pos;
# invasion(1) main(2) subroutines(2)
globalvar Vector[] iv_dom_objective_all_pos_list;
# bots(5) highvaluetarget(2) main(1)
globalvar Number hvt_dom_objective_killed_count; // Often used as boolean
# highvaluetarget(6) subroutines(1)
globalvar Number hvt_call_reinforcements_end_t;
# domination(8)
globalvar Player[] dom_point_A_contesters;
# domination(8)
globalvar Player[] dom_point_B_contesters;
# bots(6) main(1)
globalvar Boolean is_infrasight_on;
# bots(3) domination(2) highvaluetarget(1) main(41) mutators(1) subroutines(26) team1(9)
globalvar Player combatants;
# bots(4) main(2) mutators(1) pathing(2) subroutines(1) team1(2)
globalvar Number combatants_count;
# main(1) team1(1)
globalvar String[] progress_bar_strings;
# main(4)
globalvar Number[] game_or_mutator_start_huds; // Holds TextIDs *2
# bots(7) main(2) pathing(7) subroutines(2)
globalvar Boolean is_load_limit_reached;
# bots(2) main(3)
globalvar Boolean is_waiting_to_remove_bot;
# bots(42) main(14) mutators(3) pathing(3) subroutines(95) team1(68)
globalvar Any temp_1; // Use local vars
# bots(2) main(2) subroutines(57) team1(72)
globalvar Any temp_2; // Use local vars
# subroutines(1) team1(1)
globalvar Vector player_spawn_pos;
# subroutines(1) team1(1)
globalvar Vector player_spawn_facing;
# main(6) subroutines(1) team1(1)
globalvar Vector ability_shop_pos;
# main(56) subroutines(6)
globalvar Vector[] buy_menu_left_up_forward;
# main(1) subroutines(4)
globalvar Vector buy_menu_cam_pos;
# main(27) subroutines(2)
globalvar Vector buy_menu_base_pos;
# subroutines(7)
globalvar Vector[] spawn_pos_list;
# subroutines(2)
globalvar Number[] spawn_nearest_node_idx_list;
# bots(2) main(1) pathing(8) subroutines(8)
globalvar Vector[] nodes;
# main(1) pathing(4)
globalvar Number nodes_count;
# pathing(3) subroutines(1)
globalvar Number[][] edges;
# pathing(2) subroutines(1)
globalvar String[] distance_matrix;
# pathing(2) subroutines(3)
globalvar define elevator_nodes; // Unknown, only set to empty array
# main(1) pathing(1)
globalvar Boolean is_map_cg;
# main(1) pathing(2)
globalvar String char_string; // Probably used for navigation
# bots(1) main(1) team1(1)
globalvar Vector aim_offset;
# main(2) subroutines(2)
globalvar Boolean is_victory_declared;
# main(2)
globalvar Boolean is_mutator_activation_disabled; // Useless
# bots(4) main(2)
globalvar Boolean is_mutator_mode_enabled;
# bots(1) domination(2) highvaluetarget(2) main(3) subroutines(2) team1(1)
globalvar Number money_amount;
# main(7) subroutines(1) team1(1)
globalvar Number money_mult;
# bots(2) main(4)
globalvar Number diff_health_mult;
# bots(1) main(4)
globalvar Number diff_damage_mult;
# main(1) subroutines(18) team1(1)
globalvar Number[] current_perks; // Could be an enum
# subroutines(6)
globalvar Number[] current_perks_huds_list;
# main(3) subroutines(4)
globalvar Number[] mutators_list; // 0 to 19
# main(1) mutators(2) subroutines(1)
globalvar Boolean is_gmut_enabled;
# bots(2) mutators(1) subroutines(1)
globalvar Boolean gmut_storm_raging;
# mutatotrs(1) subroutines(1)
globalvar Boolean gmut_sympathy_gains;
# bots(1) mutators(2) subroutines(1)
globalvar Boolean gmut_adaptive_shield;
# bots(3) mutators(1) subroutines(1)
globalvar Boolean gmut_fortified;
# bots(6) pathing(3) subroutines(1)
globalvar Boolean mut_amped;
# bots(1) subroutines(1)
globalvar Boolean mut_hardwired;
# bots(2) subroutines(1)
globalvar Boolean mut_promotion;
# bots(2) subroutines(1)
globalvar Boolean mut_advanced_medkit;
# bots(6)
globalvar Boolean mut_lock_n_load;
# bots(1) main(1) subroutines(1)
globalvar Boolean mut_emp_rounds;
# subroutines(1)
globalvar Boolean mut_heartburn;
# subroutines(2) team1(1)
globalvar Boolean mut_deep_wounds;
# bots(1) subroutines(1)
globalvar Boolean mut_gear_upgrade;
# main(1) subroutines(1)
globalvar Boolean mut_reinforcements;
# bots(4) subroutines(1)
globalvar Boolean mut_mutation;
# main(1) subroutines(1)
globalvar Boolean mut_expendable;
# mutators(1) subroutines(1)
globalvar Boolean mut_swan_song;
# bots(4) subroutines(1)
globalvar Boolean mut_fully_loaded;
# bots(2) subroutines(1)
globalvar Boolean mut_bulletproof;
# main(3) subroutines(2)
globalvar Number[] gmut_list; // 0 to 3
# main(5) subroutines(1) team1(2)
globalvar Boolean is_apocalyptic;
# main(4) subroutines(1)
globalvar Number mut_count;
# bots(3) mutators(1) subroutines(1)
globalvar Boolean mut_artful_dodger;
# mutators(1) subroutines(1)
globalvar Boolean mut_counterstrike;
# bots(5) subroutines(1)
globalvar Boolean mut_yakuza;
# mutators(1) subroutines(1)
globalvar Boolean gmut_salvation;
# mutators(1) subroutines(1)
globalvar Boolean mut_low_blow;
# bots(1) main(5)
globalvar Number length; // Could be an enum
