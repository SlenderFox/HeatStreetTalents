import "pathfinding/pathfinding.ostw";
import "bots.ostw";
import "noclip.ostw";

globalvar Player enemyTestBot;
globalvar Boolean inControlMode;

Player host: HostPlayer();
Boolean isHost: EventPlayer() == host;
Vector hostPos: host.Position();
Vector hostEye: host.EyePosition();
Vector hostFacing: host.FacingDirection();
Vector hostTarget: RayCastHitPosition(hostEye, hostEye + hostFacing * 100, null, null, false);
Boolean hostIsCrouching: host.IsButtonHeld(Button.Crouch);

Boolean button(Button _button): host.IsButtonHeld(_button);

Boolean holdingButtonFriendly: host.IsButtonHeld(Button.Ultimate);
Boolean holdingButtonEnemy: host.IsButtonHeld(Button.Ability2);

rule: "[DEBUG] Display debug information on top left"
{
	Number loadScaler: 0.3921;
	CreateHudText(
		host,
		Text: <
			"load: c:<0>% a:<1>% p:<2>%\nposition: <3>\n<4>",
			ServerLoad() * loadScaler,
			ServerLoadAverage() * loadScaler,
			ServerLoadPeak() * loadScaler,
			hostPos,
			inControlMode ? "Control mode" : ""
		>
	);
}

rule: "[DEBUG] Host init"
Event.OngoingPlayer
if (isHost)
{
	//DisallowButton(host, Button.PrimaryFire);
	//DisallowButton(host, Button.SecondaryFire);
	//DisallowButton(host, Button.Melee);
	//DisallowButton(host, Button.Ability1);
	DisallowButton(host, Button.Ability2);
	DisallowButton(host, Button.Ultimate);
	SetRespawnMaxTime(host, 2);
}

rule: "[DEBUG] Toggle noclip"
Event.OngoingPlayer
if (isHost)
if (hostIsCrouching == false)
if (button(Button.Interact))
{
	IsNoclipping = !IsNoclipping;
}


rule: "[DEBUG] Toggle control mode"
Event.OngoingPlayer
if (isHost)
if (hostIsCrouching)
{
	inControlMode = true;
	WaitUntil(!hostIsCrouching, 9999);
	inControlMode = false;
}

rule: "[DEBUG] Teleport enemy dummy bot"
Event.OngoingPlayer
if (isHost)
if (inControlMode == false)
if (holdingButtonEnemy)
{
	if (enemyTestBot == null)
	{
		enemyTestBot = PlayersInSlot(0, Team.Team2);
		StartForcingDummyBotName(enemyTestBot, "<<TEST BOT>>");
	}

	if (!enemyTestBot.IsAlive())
	{
		Resurrect(enemyTestBot);
	}

	Teleport(enemyTestBot, hostTarget);
}

rule: "[DEBUG] Teleport friendly dummy bot"
Event.OngoingPlayer
if (isHost)
if (inControlMode == false)
if (holdingButtonFriendly)
{
	if (!friendlyBot.IsAlive())
	{
		Resurrect(friendlyBot);
	}

	Teleport(friendlyBot, hostTarget);
}

rule: "[DEBUG] Enemy pathfinding"
Event.OngoingPlayer
if (isHost)
if (inControlMode)
if (holdingButtonEnemy)
{
	enemyTestBot.pfDestination = hostTarget;
}

rule: "[DEBUG] Friendly pathfinding"
Event.OngoingPlayer
if (isHost)
if (inControlMode)
if (holdingButtonFriendly)
{
	friendlyBot.pfDestination = hostTarget;
}
