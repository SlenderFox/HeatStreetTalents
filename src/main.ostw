/** Compilation entry point.
 * Handles operation of the game.
*/
import "settings.lobby";

import "shared.ostw";
import "pathfinding/pathfinding.ostw";
import "bots.ostw";
import "gamemodes/invasion.ostw";
import "team1.ostw";
import "debug.ostw";

void LoadSettings()
{
	Any credits = WorkshopSettingCombo(" Heat Street Talents Revival", "Credits", 0, ["<Click here>", "ItsDeltin", "LemonAid", "Shingen", "LtVictory", "SgtMoody", "Developful", "Josbird"], 0);
}

void SelectGamemode()
{
	if (WorkshopSettingToggle("Enabled gamemodes", "Invasion", true, 0))
	{
		gamemode.ModAppend(HS_Gamemode.Invasion);
	}
	if (WorkshopSettingToggle("Enabled gamemodes", "High Value Target", true, 1))
	{
		gamemode.ModAppend(HS_Gamemode.HighValueTarget);
	}
	if (WorkshopSettingToggle("Enabled gamemodes", "Domination", true, 2))
	{
		gamemode.ModAppend(HS_Gamemode.Domination);
	}

	# If the player disabled all modes, treat it as all modes enabled.
	if (CountOf(gamemode) == zero)
	{
		//gamemode = [HS_Gamemode.Invasion, HS_Gamemode.HighValueTarget, HS_Gamemode.Domination].Random();
		gamemode = <HS_Gamemode>RandomInteger(0, 2);
	}
	else
	{
		gamemode = gamemode.Random();
	}
}

void SetupHUD()
{
	// -1
	// ObjectiveDescription Timer
	// 0
	// TDM score HUD
	// 1
	SetObjectiveDescription(
		AllPlayers(),
		<"Heat Street Talents Revival [WSCODE 4.0.0] | <0>", CurrentMap()>
	);
	# Hide the TDM score HUD.
	CreateHudText(
		AllPlayers(),
		Text: "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
		Location: Location.Top,
	);

	//// TODO Place warning messages about team 2 and maybe spectators.
	//if (NumberOfSlots(Team.Team1) > 5)
	//{
	//	CreateHudText(
	//		AllPlayers(),
	//		"\n\n\n\n\n\n\n\n\n\n\n\n\n\n     Too many player slots! Set Max Team 1 Players to 5 or lower and restart.     \n\n\n\n\n\n\n\n\n\n\n\n\n\n",
	//		Location: Location.Top,
	//		SortOrder: -1000,
	//		HeaderColor: Color.Yellow,
	//	);
	//}
}

void SkipAssembleHeroes()
{
	SetMatchTime(3);
	WaitUntil(IsGameInProgress(), 3.5);
	SetMatchTime(0);
}

rule: "[MAIN] Setup" -100
{
	EnableInspectorRecording();
	LoadSettings();
	SelectGamemode();
	# Allows the timer to be used for custom gamemode.
	DisableCompletion();
	DisableScoring();
	# Announcer will still say 'fight' at the start of the match.
	DisableAnnouncer();
	//DisableRespawning(AllPlayers());
	SetupHUD();
	SkipAssembleHeroes();
	# Respawning should be managed by the workshop.
	SetRespawnMaxTime(AllPlayers(), 9999);
}
