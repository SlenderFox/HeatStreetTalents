/** Compilation entry point.
 * Handles operation of the game.
*/
import "settings.lobby";

import "shared.ostw";
import "pathfinding/pathfinding.ostw";
import "bots.ostw";
import "gamemodes/invasion.ostw";
import "team1.ostw";
import "HUD.ostw";
import "debug.ostw";

void Credits()
{
	// Cannot use number optimisation
	Any credits = WorkshopSettingCombo(" Heat Street Talents Revival", "Credits", 0, ["<Click here>", "ItsDeltin", "LemonAid", "Shingen", "LtVictory", "SgtMoody", "Developful", "Josbird"], 0);
}

void SelectGamemode()
{
	// Cannot use number optimisation
	if (WorkshopSettingToggle("Enabled gamemodes", "Invasion", true, 0))
	{ gGamemode.ModAppend(HS_Gamemode.Invasion); }
	// Cannot use number optimisation
	if (WorkshopSettingToggle("Enabled gamemodes", "High Value Target", false, 1))
	{ gGamemode.ModAppend(HS_Gamemode.HighValueTarget); }
	// Cannot use number optimisation
	if (WorkshopSettingToggle("Enabled gamemodes", "Domination", false, 2))
	{ gGamemode.ModAppend(HS_Gamemode.Domination); }

	# If the player disabled all modes, treat it as all modes enabled.
	if (CountOf(gGamemode))
	{ gGamemode = gGamemode.Random(); }
	else
	{ gGamemode = <HS_Gamemode>RandomInteger(ZERO, 2); }
}

void SkipAssembleHeroes()
{
	SetMatchTime(3);
	WaitUntil(IsGameInProgress(), 3.5);
	SetMatchTime(ZERO);
}

rule: "[MAIN] Setup" -100
{
	EnableInspectorRecording();
	Credits();
	SelectGamemode();
	SkipAssembleHeroes();
	//DisableRespawning(AllPlayers());
	SetupHUD();
	# Respawning should be managed by the workshop.
	SetRespawnMaxTime(AllPlayers(), 9999);
	# Allows the timer to be used for custom gamemode.
	DisableCompletion();
	DisableScoring();
	# Announcer will still say 'fight' at the start of the match.
	DisableAnnouncer();
	//DisableScoreboard(AllPlayers());

	//while (true)
	//{
	//	SetMatchTime(TotalTimeElapsed());
	//	Wait(0.05);
	//}
}
